apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.ehrProxy.name }}
spec:
  serviceName: {{ .Values.ehrProxy.name }}
  replicas: {{ .Values.ehrProxy.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.ehrProxy.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.ehrProxy.name }}
    spec:
      containers:
        - name: {{ .Values.ehrProxy.name }}
          image: {{ .Values.ehrProxy.repository }}
          imagePullPolicy: {{ .Values.ehrProxy.imagePullPolicy }}
          ports:
            - containerPort: 9999
            - containerPort: 8080
          volumeMounts:
            - name: config-files
              mountPath: ./app/conf
          env:
          - name: sentinel.ip
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: sentinel.ip
          - name: sentinel.port
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: sentinel.port
          - name: redis.name
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: redis.name
          - name: redis.building.command
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: redis.building.command
          - name: redis.utility.building.command
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: redis.utility.building.command
          - name: redis.procedure.command
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: redis.procedure.command
          - name: redis.document.command
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: redis.document.command
          - name: redis.token
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redisConnectionSecret }}
                key: redis.token
          - name: redis.socket.port
            value: ":9999"
          - name: redis.type.normal
            value: "false"
          readinessProbe:
            httpGet:
              path: /readiness
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      volumes:
        - name: config-files
          configMap:
            name: {{ .Values.ehrProxy.name }}
            items:
              - key: init_json
                path: init.json
        